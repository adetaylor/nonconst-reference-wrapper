use autogenerated::{take_const_reference, take_nonconst_reference};
use reference_wrapper::NonConstRef;

mod autogenerated;
mod reference_wrapper;

fn main() {
    let mut outer = autogenerated::Outer {
        t: autogenerated::Inner(42),
    };
    let reference_to_outer = NonConstRef::new(&mut outer);
    reference_to_outer.outer_const_method();
    reference_to_outer.outer_nonconst_method();
    let inner = reference_to_outer.get_t_const();
    inner.t_const_method();
    let inner = reference_to_outer.get_t_non_const();
    let inner2 = reference_to_outer.get_t_non_const();
    inner.t_const_method();
    inner2.t_const_method();
    inner2.t_nonconst_method();
    take_const_reference(&inner2); // minor paper cut
    take_nonconst_reference(inner2.clone()); // minor paper cut
    take_nonconst_reference(inner2);
}
